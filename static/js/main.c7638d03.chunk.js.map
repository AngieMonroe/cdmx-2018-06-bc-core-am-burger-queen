{"version":3,"sources":["images/Logo.png","firebaseConf/FirebaseConf.js","App.js","components/PasswordReset.js","components/Login.js","components/NavbarApp.js","components/Orders.js","components/Wall.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebaseConf","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","authListener","_this2","auth","onAuthStateChanged","setState","history","push","replace","react_default","a","createElement","className","Component","withRouter","PasswordReset","handleChange","e","defineProperty","target","name","value","email","preventDefault","then","catch","error","console","log","mdbreact","md","src","Logo","alt","label","icon","group","type","validate","success","onChange","bind","color","size","onClick","resetPassword","Login","signIn","assertThisInitialized","password","_this$state","signInWithEmailAndPassword","result","to","NavbarApp","signOut","BrowserRouter","dark","expand","scrolling","href","height","right","logout","Orders","Wall","components_NavbarApp","Link","components_Orders","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","basename","process","Route","exact","path","component","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c7638d03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.3aa9aef1.png\";","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBkvp9ifqDeJNPNCH-0PK5QxZpNyZxxjrE\",\r\n    authDomain: \"burguer-queen-b6057.firebaseapp.com\",\r\n    databaseURL: \"https://burguer-queen-b6057.firebaseio.com\",\r\n    projectId: \"burguer-queen-b6057\",\r\n    storageBucket: \"burguer-queen-b6057.appspot.com\",\r\n    messagingSenderId: \"393144218466\"\r\n  };\r\n  const firebaseConf = firebase.initializeApp(config);\r\n\r\n  export default firebaseConf;","import React, { Component } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport firebaseConf from './firebaseConf/FirebaseConf';\n\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: {}\n    }\n  }\n\n  componentDidMount(){\n    this.authListener();\n  }\n\n  authListener() {\n    firebaseConf.auth().onAuthStateChanged((user)=>{\n      if(user){\n        this.setState({ user });\n        this.props.history.push('/orders')\n      } else{\n        this.setState({ user: null });\n        this.props.history.replace('/login')\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      \n      </div>\n    )}\n}\n\nexport default withRouter(App);\n","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Container, Row, Col, Input, Button } from 'mdbreact';\r\nimport * as firebase from 'firebase'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass PasswordReset extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: ''\r\n    }\r\n  }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState ({\r\n          [e.target.name]: e.target.value\r\n        })\r\n      }\r\n\r\n    resetPassword(e){\r\n      e.preventDefault();\r\n      const { email } = this.state;\r\n        firebase.sendPasswordResetEmail(email).then(function() {\r\n          }).catch(function(error) {\r\n          console.log(error)\r\n          });\r\n          this.props.history.push('/orders');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Container>\r\n        <Row className= \"row justify-content-md-center\">\r\n          <Col md=\"10\">\r\n          <img src={Logo} className=\"m-5 mx-auto d-block\" alt=\"logo\" />\r\n            <form>\r\n              <p className=\"h5 text-center mb-4\">Restaura tu contraseña</p>\r\n              <div className=\"grey-text\">\r\n                <Input label=\"Escribe tu email\" icon=\"envelope\" group type=\"email\" name=\"email\" validate error=\"wrong\" success=\"right\" onChange={this.handleChange.bind(this)}/>\r\n              </div>\r\n              <div className=\"text-center mb-3\">\r\n                <Button color=\"warning\" className=\"mb-3\" size=\"lg\" onClick={this.resetPassword.bind(this)} >Enviar correo</Button>\r\n              </div>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PasswordReset);","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Container, Row, Col, Input, Button, ModalFooter } from 'mdbreact';\r\nimport { withRouter } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nclass Login extends Component  {\r\n  constructor(props){\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n  \r\n\r\n  signIn(e) {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then(result => this.props.history.push('/orders'))\r\n    .catch(function(error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  handleChange(e){\r\n    // console.log(this.state)\r\n    this.setState ({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Container>\r\n        <Row className= \"row justify-content-md-center\">\r\n          <Col md=\"10\">\r\n          <img src={Logo} className=\"m-5 mx-auto d-block\" alt=\"logo\" />\r\n            <form>\r\n              <p className=\"h5 text-center mb-5\">Abrir Caja</p>\r\n              <div className=\"grey-text mb-4\">\r\n                <Input className=\"mb-5\" label=\"Escribe tu email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\" name=\"email\" onChange={this.handleChange}/>\r\n                <Input className=\"mb-5\" label=\"Escribe tu password\" icon=\"lock\" group type=\"password\" validate name=\"password\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"text-center mb-3\">\r\n                <Button color=\"warning\" className=\"mb-5 rounded\" size=\"lg\" onClick={this.signIn.bind(this)} >Entrar</Button>\r\n              </div>\r\n            </form>\r\n            <ModalFooter className=\"mx-5 pt-3 mt-4\">\r\n              <Button color=\"lime\" size=\"lg\" className=\"mt-5 rounded\" to={'/recover'}>Restaurar Contraseña </Button>\r\n            </ModalFooter>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withRouter(Login);","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Navbar, NavbarBrand, NavbarNav,  NavItem, Button } from 'mdbreact';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass NavbarApp extends Component {\r\n\r\n    logout(){\r\n        firebase.auth().signOut()\r\n        .then(function() {\r\n            console.log('saliendo')\r\n        })\r\n        .catch(function(){\r\n            console.log('error al cerrar sesión')\r\n        })\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Navbar color=\"lime\" dark expand=\"md\" scrolling>\r\n                    <NavbarBrand href=\"/\">\r\n                    <img src={Logo} alt=\"logo\" height=\"80\"/>\r\n                    </NavbarBrand>\r\n                        <NavbarNav right>\r\n                          <NavItem>\r\n                            <Button color=\"red darken-4\" className=\"rounded\" onClick={this.logout.bind(this)}>Cerrar caja</Button>\r\n                          </NavItem>\r\n                        </NavbarNav>\r\n                </Navbar>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(NavbarApp);","import React from 'react';\r\nimport { Table, TableBody, Button, Fa  } from 'mdbreact';\r\n\r\nconst Orders = (props) => {\r\n  return (\r\n      <section className=\"container\">\r\n        <div className=\"row mt-5 \">\r\n        <div className=\"col-7\">\r\n        <Table>\r\n        <TableBody>\r\n            <tr>\r\n            <td className=\"text-center align-middle h4-responsive\">Producto</td>\r\n            <td className=\"text-center align-middle h4-responsive\">Precio</td>\r\n            <td className=\"text-center align-middle\"><Button size=\"md\" color=\"red darken-4 rounded\"><Fa icon=\"trash\" size=\"1x md\" className=\"m-1\"/><br/></Button></td>\r\n            </tr>\r\n            <tr>\r\n            <td className=\"text-center align-middle h4-responsive\">Producto</td>\r\n            <td className=\"text-center align-middle h4-responsive\">Precio</td>\r\n            <td className=\"text-center align-middle\"><Button size=\"md\" color=\"red darken-4 rounded\"><Fa icon=\"trash\" size=\"1x md\" className=\"m-1\"/><br/></Button></td>\r\n            </tr>\r\n        </TableBody>\r\n        </Table>\r\n        </div>\r\n         <div className=\"col-5 text-center \">\r\n             <p className=\"display-4\">Total<br/>$10.00</p>\r\n             <Button color=\"lime\" ><Fa icon=\"paper-plane\" size=\"1x md\" className=\"\"/><br/>Enviar a Cocina</Button>\r\n         </div>\r\n        </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Orders;","import React,  { Component }  from 'react';\r\nimport NavbarApp from './NavbarApp';\r\nimport { Button } from 'mdbreact';\r\nimport Orders from './Orders'\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nclass Wall extends Component {\r\n   \r\n    render(){\r\n        return (\r\n            <div>\r\n            <NavbarApp />\r\n            <section className=\"container mt-4\">\r\n            <Button className=\"mr-4 rounded\" size=\"lg\" color=\"lime darken-4\"> <Link to={'/recover'}>Desayunos </Link></Button>\r\n            <Button className=\"rounded\" size=\"lg\" color=\"orange darken-4\">Comida y Cenas</Button>\r\n            <section>\r\n            </section>\r\n            </section>\r\n            <Orders />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Wall);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    console.log(\"no registrarse sw Current env:\", process.env.NODE_ENV)\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(\"sw registrada\")\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport PasswordReset from './components/PasswordReset';\nimport Login from './components/Login';\nimport Wall from './components/Wall';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter basename = { process.env.PUBLIC_URL } >\n      <div>\n              <Route exact path = '/' component = { App } />\n              <Route path = '/login' component = { Login } />\n              <Route path = '/recover' component = { PasswordReset } />\n              <Route path = '/orders' component = { Wall } />\n        </div>\n      </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}