{"version":3,"sources":["images/Logo.png","firebaseConf/FirebaseConf.js","components/Login.js","components/PasswordReset.js","components/NavbarApp.js","components/BreakfastMenu.js","components/Orders.js","components/Wall.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebaseConf","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signIn","bind","assertThisInitialized","handleChange","state","email","password","e","_this$state","preventDefault","auth","signInWithEmailAndPassword","catch","error","console","log","setState","defineProperty","target","name","value","react_default","a","createElement","BrowserRouter","mdbreact","className","md","src","Logo","alt","label","icon","group","type","validate","success","onChange","color","size","onClick","NavbarApp","signOut","then","dark","expand","scrolling","href","height","right","logout","BreakfastMenu","Orders","Wall","components_NavbarApp","components_BreakfastMenu","components_Orders","App","user","authListener","_this2","onAuthStateChanged","components_Wall","components_Login","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.229a456e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.3aa9aef1.png\";","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBkvp9ifqDeJNPNCH-0PK5QxZpNyZxxjrE\",\r\n    authDomain: \"burguer-queen-b6057.firebaseapp.com\",\r\n    databaseURL: \"https://burguer-queen-b6057.firebaseio.com\",\r\n    projectId: \"burguer-queen-b6057\",\r\n    storageBucket: \"burguer-queen-b6057.appspot.com\",\r\n    messagingSenderId: \"393144218466\"\r\n  };\r\n  const firebaseConf = firebase.initializeApp(config);\r\n\r\n  export default firebaseConf;","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Container, Row, Col, Input, Button, ModalFooter } from 'mdbreact';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport PasswordReset from './PasswordReset';\r\nimport firebase from 'firebase';\r\n\r\nclass Login extends Component  {\r\n  constructor(props){\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  signIn(e) {\r\n    const { email, password } = this.state;\r\n    e.preventDefault();\r\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  handleChange(e){\r\n    // console.log(this.state)\r\n    this.setState ({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <BrowserRouter>\r\n      <Container>\r\n        <Row className= \"row justify-content-md-center\">\r\n          <Col md=\"10\">\r\n          <img src={Logo} className=\"m-5 mx-auto d-block\" alt=\"logo\" />\r\n            <form>\r\n              <p className=\"h5 text-center mb-5\">Abrir Caja</p>\r\n              <div className=\"grey-text mb-4\">\r\n                <Input className=\"mb-5\" label=\"Escribe tu email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\" name=\"email\" onChange={this.handleChange}/>\r\n                <Input className=\"mb-5\" label=\"Escribe tu password\" icon=\"lock\" group type=\"password\" validate name=\"password\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"text-center mb-3\">\r\n                <Button color=\"warning\" className=\"mb-5 rounded\" size=\"lg\" onClick={this.signIn} >Entrar</Button>\r\n              </div>\r\n            </form>\r\n            <ModalFooter className=\"mx-5 pt-3 mt-4\">\r\n              <Button color=\"lime\" size=\"lg\" className=\"mt-5 rounded\">Restaurar Contraseña</Button>\r\n            </ModalFooter>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </BrowserRouter>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Container, Row, Col, Input, Button } from 'mdbreact';\r\nimport firebaseConf from '../firebaseConf/FirebaseConf'\r\n\r\nclass PasswordReset extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: ''\r\n    }\r\n  }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState ({\r\n          [e.target.name]: e.target.value\r\n        })\r\n      }\r\n\r\n    resetPassword(){\r\n      console.log(this.state)\r\n        firebaseConf.sendPasswordResetEmail(this.state.email).then(function() {\r\n            // Email sent.\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n          });\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Container>\r\n        <Row className= \"row justify-content-md-center\">\r\n          <Col md=\"10\">\r\n          <img src={Logo} className=\"m-5 mx-auto d-block\" alt=\"logo\" />\r\n            <form>\r\n              <p className=\"h5 text-center mb-4\">Restaura tu contraseña</p>\r\n              <div className=\"grey-text\">\r\n                <Input label=\"Escribe tu email\" icon=\"envelope\" group type=\"email\" name=\"email\" validate error=\"wrong\" success=\"right\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"text-center mb-3\">\r\n                <Button color=\"warning\" className=\"mb-3\" size=\"lg\" onClick={this.resetPassword} >Enviar correo</Button>\r\n              </div>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PasswordReset;","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Navbar, NavbarBrand, NavbarNav,  NavItem, Button } from 'mdbreact';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\n\r\nclass NavbarApp extends Component {\r\n\r\n    logout(){\r\n        firebase.auth().signOut()\r\n        .then(function() {\r\n            console.log('saliendo')\r\n        })\r\n        .catch(function(){\r\n            console.log('error al cerrar sesión')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Navbar color=\"lime\" dark expand=\"md\" scrolling>\r\n                    <NavbarBrand href=\"/\">\r\n                    <img src={Logo} alt=\"logo\" height=\"80\"/>\r\n                    </NavbarBrand>\r\n                        <NavbarNav right>\r\n                          <NavItem>\r\n                            <Button color=\"red darken-4 rounded\" onClick={this.logout}>Cerrar caja</Button>\r\n                          </NavItem>\r\n                        </NavbarNav>\r\n                </Navbar>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarApp;","import React,  { Component }  from 'react';\r\nimport { Button, Fa } from 'mdbreact';\r\n\r\n\r\n\r\nclass BreakfastMenu extends Component {\r\n    render(){\r\n        return (\r\n            <section className=\"ml-4 mt-5\">\r\n                <Button color=\"lime\"><Fa icon=\"coffee\" size=\"5x lg\" className=\"m-2\"/><br/>Café americano</Button>\r\n                <Button ><Fa icon=\"coffee\" size=\"5x lg\" className=\"m-2\"/><strong className=\"h2\">M</strong><br/>Café con Leche</Button>\r\n                <Button ><Fa icon=\"cutlery\" size=\"5x lg\" className=\"m-2\"/><br/>Sandwich J y Q</Button>\r\n                <Button ><Fa icon=\"leaf\" size=\"5x lg\" className=\"m-2\"/><br/>Jugo Natural</Button>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BreakfastMenu;","import React from 'react';\r\nimport { Table, TableBody, Button, Fa  } from 'mdbreact';\r\n\r\nconst Orders = (props) => {\r\n  return (\r\n      <section className=\"container\">\r\n        <div className=\"row mt-5 \">\r\n        <div className=\"col-7\">\r\n        <Table>\r\n        <TableBody>\r\n            <tr>\r\n            <td>Producto</td>\r\n            <td>Precio</td>\r\n            <td><Button color=\"red darken-4 rounded\"><Fa icon=\"trash\" size=\"1x md\" className=\"m-1\"/><br/></Button></td>\r\n            </tr>\r\n            <tr>\r\n            <td>Producto</td>\r\n            <td>Precio</td>\r\n            <td><Button color=\"red darken-4 rounded\"><Fa icon=\"trash\" size=\"1x md\" className=\"m-1\"/><br/></Button></td>\r\n            </tr>\r\n        </TableBody>\r\n        </Table>\r\n        </div>\r\n         <div className=\"col col-5 text-center\">\r\n             <p className=\"display-4\">Total<br/>$10.00</p>\r\n             <Button ><Fa icon=\"paper-plane\" size=\"1x md\" className=\"m-1\"/><br/>Enviar a Cocina</Button>\r\n         </div>\r\n        </div>\r\n\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Orders;","import React,  { Component }  from 'react';\r\nimport NavbarApp from './NavbarApp';\r\nimport { Button } from 'mdbreact';\r\nimport BreakfastMenu from './BreakfastMenu';\r\nimport Orders from './Orders'\r\n\r\n\r\nclass Wall extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n            <NavbarApp />\r\n            <section className=\"mt-4 ml-4\">\r\n            <Button className=\"mr-4 rounded\" size=\"lg\" color=\"lime darken-4\">Desayunos</Button>\r\n            <Button className=\"rounded\" size=\"lg\" color=\"orange darken-4\">Comida y Cenas</Button>\r\n            </section>\r\n            <BreakfastMenu />\r\n            <Orders />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;","import React, { Component } from 'react';\nimport './App.css';\nimport firebaseConf from './firebaseConf/FirebaseConf';\nimport Login from '../src/components/Login';\nimport Wall from '../src/components/Wall';\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: {}\n    }\n  }\n\n  componentDidMount(){\n    this.authListener();\n  }\n\n  authListener() {\n    firebaseConf.auth().onAuthStateChanged((user)=>{\n      if(user){\n        this.setState({ user });\n      } else{\n        this.setState({ user: null });\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      {this.state.user ? (<Wall user={this.state.user} />) : (<Login />)}\n      </div>\n    )}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    console.log(\"no registrarse sw Current env:\", process.env.NODE_ENV)\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(\"sw registrada\")\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}