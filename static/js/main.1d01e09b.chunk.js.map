{"version":3,"sources":["images/Logo.png","firebaseConf/FirebaseConf.js","App.js","components/PasswordReset.js","components/Login.js","components/NavbarApp.js","store.js","components/Orders.js","components/Footer.js","components/Wall.js","components/OrderList.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebaseConf","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","authListener","_this2","auth","onAuthStateChanged","setState","history","push","replace","react_default","a","createElement","className","Component","withRouter","PasswordReset","handleChange","e","defineProperty","target","name","value","email","preventDefault","sendPasswordResetEmail","then","alert","catch","error","console","log","mdbreact","md","src","Logo","alt","label","icon","group","type","validate","success","onChange","bind","color","size","onClick","resetPassword","Login","signIn","assertThisInitialized","password","_this$state","signInWithEmailAndPassword","result","NavbarApp","signOut","BrowserRouter","dark","expand","scrolling","href","height","right","logout","createStore","action","objectSpread","order","concat","product","filter","id","firestore","Orders","store","subscribe","getState","dispatch","collection","add","status","total","map","i","key","nombre","precio","removeFromOrder","forEach","sendKitchen","FooterApp","fluid","orderList","Wall","breakfast","dinner","extra","client","toUpperCase","menu","button","_this3","data","addToCart","handleChangeExtra","components_NavbarApp","handleChangeName","handleChangeBreakfast","handleChangeDinner","components_Orders","Footer","OrderList","orders","onSnapshot","querySnapshot","doc","_doc$data","dataOrder","infoOrder","element","class","reverse","scope","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","basename","process","Route","exact","path","component","document","getElementById","URL","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1d01e09b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.3aa9aef1.png\";","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBkvp9ifqDeJNPNCH-0PK5QxZpNyZxxjrE\",\r\n    authDomain: \"burguer-queen-b6057.firebaseapp.com\",\r\n    databaseURL: \"https://burguer-queen-b6057.firebaseio.com\",\r\n    projectId: \"burguer-queen-b6057\",\r\n    storageBucket: \"burguer-queen-b6057.appspot.com\",\r\n    messagingSenderId: \"393144218466\"\r\n  };\r\n  const firebaseConf = firebase.initializeApp(config);\r\n\r\n\r\n  export default firebaseConf;","import React, { Component } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport firebaseConf from './firebaseConf/FirebaseConf';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: null\n    }\n  }\n\n  componentDidMount(){\n    this.authListener();\n  }\n\n  authListener() {\n    firebaseConf.auth().onAuthStateChanged((user)=>{\n      if(user){\n        this.setState({ user });\n        this.props.history.push('/orders')\n      } else{\n        this.setState({ user: null });\n        this.props.history.replace('/login')\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      \n      </div>\n    )}\n}\n\nexport default withRouter(App);\n","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Container, Row, Col, Input, Button } from 'mdbreact';\r\nimport * as firebase from 'firebase'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass PasswordReset extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: ''\r\n    }\r\n  }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState ({\r\n          [e.target.name]: e.target.value\r\n        })\r\n      }\r\n\r\n    resetPassword(e){\r\n      e.preventDefault();\r\n      const { email } = this.state;\r\n        firebase.auth().sendPasswordResetEmail(email).then(function() {\r\n          alert('Te enviamos un correo')\r\n          }).catch(function(error) {\r\n          console.log(error)\r\n          });\r\n          this.props.history.push('/login');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Container>\r\n        <Row className= \"row justify-content-md-center\">\r\n          <Col md=\"10\">\r\n          <img src={Logo} className=\"m-5 mx-auto d-block\" alt=\"logo\" />\r\n            <form>\r\n              <p className=\"h5 text-center mb-4\">Restaura tu contraseña</p>\r\n              <div className=\"grey-text\">\r\n                <Input label=\"Escribe tu email\" icon=\"envelope\" group type=\"email\" name=\"email\" validate error=\"wrong\" success=\"right\" onChange={this.handleChange.bind(this)}/>\r\n              </div>\r\n              <div className=\"text-center mb-3\">\r\n                <Button color=\"warning\" className=\"mb-3\" size=\"lg\" onClick={this.resetPassword.bind(this)} >Enviar correo</Button>\r\n              </div>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PasswordReset);","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Container, Row, Col, Input, Button, ModalFooter } from 'mdbreact';\r\nimport { withRouter } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nclass Login extends Component  {\r\n  constructor(props){\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n  \r\n\r\n  signIn(e) {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then(result => this.props.history.push('/orders'))\r\n    .catch(function(error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  handleChange(e){\r\n    // console.log(this.state)\r\n    this.setState ({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  resetPassword(){\r\n    this.props.history.push('/recover')\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Container>\r\n        <Row className= \"row justify-content-md-center\">\r\n          <Col md=\"10\">\r\n          <img src={Logo} className=\"m-5 mx-auto d-block\" alt=\"logo\" />\r\n            <form>\r\n              <p className=\"h5 text-center mb-5\">Abrir Caja</p>\r\n              <div className=\"grey-text mb-4\">\r\n                <Input className=\"mb-5\" label=\"Escribe tu email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\" name=\"email\" onChange={this.handleChange}/>\r\n                <Input className=\"mb-5\" label=\"Escribe tu password\" icon=\"lock\" group type=\"password\" validate name=\"password\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"text-center mb-3\">\r\n                <Button color=\"warning\" className=\"mb-5 rounded\" size=\"lg\" onClick={this.signIn.bind(this)} >Entrar</Button>\r\n              </div>\r\n            </form>\r\n            <ModalFooter className=\"mx-5 pt-3 mt-4\">\r\n              <Button color=\"lime\" size=\"lg\" className=\"mt-5 rounded\" onClick={this.resetPassword.bind(this)}>Restaurar Contraseña </Button>\r\n            </ModalFooter>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withRouter(Login);","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Navbar, NavbarBrand, NavbarNav,  NavItem, Button } from 'mdbreact';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass NavbarApp extends Component {\r\n\r\n    logout(){\r\n        firebase.auth().signOut()\r\n        .then(function() {\r\n            console.log('saliendo')\r\n        })\r\n        .catch(function(){\r\n            console.log('error al cerrar sesión')\r\n        })\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Navbar color=\"lime\" dark expand=\"md\" scrolling>\r\n                    <NavbarBrand href=\"/\">\r\n                    <img src={Logo} alt=\"logo\" height=\"80\"/>\r\n                    </NavbarBrand>\r\n                        <NavbarNav right>\r\n                          <NavItem>\r\n                            <Button color=\"red darken-4\" className=\"rounded\" onClick={this.logout.bind(this)}>Cerrar caja</Button>\r\n                          </NavItem>\r\n                        </NavbarNav>\r\n                </Navbar>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(NavbarApp);","import { createStore } from  'redux';\r\n\r\nconst reducer = (state, action) => {\r\n    if(action.type === \"ADD_TO_ORDER\"){\r\n        return {\r\n            ...state,\r\n            order: state.order.concat(action.product)\r\n            }\r\n    } else if(action.type === \"REMOVE_FROM_ORDER\"){\r\n        return {\r\n            ...state,\r\n            order: state.order.filter(product => product.id !== action.product.id)\r\n        }\r\n    }\r\nreturn state;\r\n};\r\n\r\nexport default createStore(reducer, {order: []});","import React, { Component } from 'react';\r\nimport { Table, TableBody, Button, Fa  } from 'mdbreact';\r\nimport store from '../store';\r\nimport firebase from 'firebase';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\n\r\n\r\nclass Orders extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            order: []\r\n        }\r\n        store.subscribe(() => {\r\n            this.setState({\r\n                order: store.getState().order\r\n            })\r\n            console.log(this.state.order)\r\n        });\r\n    }\r\n\r\n    removeFromOrder(product){\r\n        store.dispatch({\r\n            type: \"REMOVE_FROM_ORDER\",\r\n            product})\r\n            \r\n    }\r\n\r\n    sendKitchen(){\r\n        const {name} = this.props\r\n        console.log(name)\r\n        firestore.collection(\"orders\").add({\r\n            order: this.state.order,\r\n            status: \"En cocina\",\r\n            name\r\n        })\r\n        .then(function() {\r\n            console.log(\"Document successfully written!\");\r\n\r\n        })\r\n    }\r\n   \r\n\r\n    render() {\r\n        let order;\r\n        let total = 0\r\n        order = this.state.order.map((product, i) => {\r\n            console.log(product)\r\n            return <tr key={i}>\r\n            <td className=\"text-center align-middle\">{product.nombre}</td>\r\n            <td className=\"text-center align-middle\">{product.precio}</td>\r\n            <td className=\"text-center align-middle\">\r\n            <Button size=\"sm\" color=\"red darken-4 rounded\" onClick={() =>this.removeFromOrder(product)}><Fa icon=\"trash\" size=\"1x\"/><br/></Button></td>\r\n            </tr>\r\n        })\r\n\r\n        this.state.order.forEach(product => {\r\n            console.log(product.precio)\r\n            total += product.precio\r\n        })\r\n\r\n        \r\n    return (\r\n      <section className=\"container\">\r\n        <div className=\"row mt-5 \">\r\n        <div className=\"col-7\">\r\n        <Table>\r\n        <TableBody>\r\n        {order}\r\n        </TableBody>\r\n        </Table>\r\n        </div>\r\n         <div className=\"col-5 text-center \">\r\n             <p className=\"display-4\">Total<br/>${total}</p>\r\n             <Button color=\"lime\" onClick={this.sendKitchen.bind(this)}><Fa icon=\"paper-plane\" size=\"1x md\"/><br/>Enviar a Cocina</Button>\r\n         </div>\r\n        </div>\r\n    </section>)\r\n  }\r\n}\r\n\r\nexport default withRouter(Orders);","import React, { Component} from \"react\";\r\nimport { Col, Container, Row, Footer, Button, Fa } from \"mdbreact\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass FooterApp extends Component {\r\n    \r\n    orderList(){\r\n        this.props.history.push('/report')\r\n      }\r\n      \r\n    render() {\r\n    return (\r\n    <Footer color=\"warning-color\" className=\"font-small fixed-bottom\" >\r\n    <Container fluid className=\"text-center text-md-right\">\r\n        <Row>\r\n        <Col>\r\n        <Button size=\"lg\" color=\"red\" onClick={this.orderList.bind(this)}> <Fa icon=\"list-alt\" size=\"1x\"/> <br/> Lista de Pedidos</Button>\r\n        </Col>\r\n        </Row>\r\n    </Container>\r\n    </Footer>\r\n    );\r\n}\r\n}\r\n\r\nexport default withRouter(FooterApp);","import React,  { Component }  from 'react';\r\nimport NavbarApp from './NavbarApp';\r\nimport { Button, Fa } from 'mdbreact';\r\nimport Orders from './Orders'\r\nimport { withRouter } from 'react-router-dom';\r\nimport data from '../data/dataBurger.json'\r\nimport store from '../store';\r\nimport firebase from 'firebase';\r\nimport FooterApp from './Footer';\r\n\r\nclass Wall extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            breakfast : false,\r\n            dinner : false,\r\n            extra : false,\r\n            client: null,\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if(!user){\r\n                this.props.history.push('/login')\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeName(e){\r\n        this.setState ({\r\n            [e.target.name]: e.target.value.toUpperCase()\r\n        })\r\n    }\r\n\r\n    handleChangeBreakfast(){\r\n        this.setState ({breakfast: true})\r\n    }\r\n\r\n    handleChangeDinner(){\r\n        this.setState ({breakfast: false, dinner: true})\r\n    }\r\n\r\n    // onClick(e){\r\n    //     e.preventDefault();\r\n    //     const order = this.state.order\r\n    //     order.push({producto : e.target.name,\r\n    //                 precio : parseInt(e.target.value)})\r\n    //     this.setState({ order : order })\r\n    // }\r\n\r\n    handleChangeExtra(){\r\n        this.setState({dinner: false, extra: true})\r\n    }\r\n\r\n    render() {\r\n        let menu;\r\n        let button;\r\n        if(this.state.breakfast){\r\n        menu =  data.breakfast.map((product, i) => {\r\n        return (\r\n          <Button key={i} color=\"green\" className=\"mr-3 mb-3\" name={product.nombre} value={product.precio} onClick={()=> this.addToCart(product)}><Fa icon={product.icon} size=\"3x md\" className=\"m-1\"/><br/>{product.nombre}</Button>\r\n        )\r\n        })\r\n        } else if (this.state.dinner){\r\n            button = <Button className=\"rounded\" size=\"lg\" color=\"amber lighten-5\" onClick={this.handleChangeExtra.bind(this)}>Extra</Button>\r\n\r\n            menu = data.dinner.map((product, i) => {\r\n                return (\r\n                    <Button key={i} color=\"amber\" className=\"mr-2 mb-3\" name={product.nombre} value={product.precio} onClick={()=> this.addToCart(product)}><Fa icon={product.icon} size=\"3x md\" className=\"m-1\"/><br/>{product.nombre}</Button>\r\n                )\r\n            })\r\n        } else if (this.state.extra){\r\n            menu = data.extra.map((product, i) => {\r\n                return (\r\n                    <Button key={i} color=\"amber lighten-5\" className=\"mr-5 mb-3\" name={product.nombre} value={product.precio} onClick={()=> this.addToCart(product)}><Fa icon={product.icon} size=\"3x lg\" className=\"m-1\"/><br/>{product.nombre}</Button>\r\n                )\r\n            })\r\n        }\r\n\r\n        \r\n        return (\r\n            <div>\r\n            <NavbarApp />\r\n            <section className=\"container mt-4\">\r\n            <label id=\"exampleForm2\">Nombre cliente</label>\r\n            <input type=\"text\" id=\"exampleForm2\" className=\"form-control col-8 mb-3\" name=\"client\" onChange={this.handleChangeName.bind(this)}></input>\r\n            <Button className=\"mr-4 rounded\" size=\"lg\" color=\"lime darken-4\" onClick={this.handleChangeBreakfast.bind(this)}>Desayunos</Button>\r\n            <Button className=\"rounded\" size=\"lg\" color=\"orange darken-4\" onClick={this.handleChangeDinner.bind(this)}>Comida</Button>\r\n            {button}\r\n\r\n            <section className=\"mt-4\">\r\n            {menu}   \r\n            </section>\r\n            </section>\r\n            <Orders name ={this.state.client}/>\r\n            <FooterApp />\r\n            \r\n            </div>\r\n        )\r\n    }\r\n\r\n    addToCart(product){\r\n        store.dispatch({\r\n            type: \"ADD_TO_ORDER\",\r\n            product})\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Wall);","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport { withRouter } from 'react-router-dom';\r\nimport NavbarApp from './NavbarApp';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\n\r\nclass OrderList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            orders: []\r\n        })\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        const orders = []\r\n        firestore.collection('orders').onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                const {status, order, name} = doc.data();\r\n                console.log(status, order)\r\n                let dataOrder = {status, order, name}\r\n                orders.push(dataOrder);\r\n                // statusKitchen = status;\r\n                // order.forEach((element) => {\r\n                //     const dataOrder = element\r\n                //     orders.push({dataOrder})\r\n                // })\r\n            })\r\n        //     const pedido = {statusKiondragover\r\n        //     let arraypedido = []\r\n        //     arraypedido.push(pedido)\r\n        console.log(orders)\r\n        this.setState({orders})\r\n        })\r\n\r\n    }\r\n\r\n    render () {\r\n        \r\n        let infoOrder = this.state.orders.map((element, i) => {\r\n            console.log(element.status)\r\n            let product = element.order.map((product) => {\r\n                return  product.nombre\r\n            })\r\n            return (\r\n            \r\n                <tr key={i}>\r\n                    <td>{element.name}</td>\r\n                    <td>{product}</td>\r\n                    <td>{element.status}<label class=\"bs-switch\">\r\n                        <input  size=\"sm\" type=\"checkbox\"/>\r\n                        <span class=\"slider round\"></span>\r\n                        </label>\r\n                        Entregado</td>\r\n                </tr>\r\n            ) \r\n        }).reverse()\r\n        return (\r\n            <section>\r\n                <NavbarApp />\r\n            <article className=\"container mt-5\">\r\n                <table className=\"table container\">\r\n                <thead className=\"grey lighten-2\">\r\n                    <tr>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Pedido</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {infoOrder}\r\n                </tbody>\r\n                </table>\r\n                </article>\r\n                </section>\r\n        )\r\n \r\n}\r\n}\r\n\r\nexport default withRouter(OrderList);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    console.log(\"no registrarse sw Current env:\", process.env.NODE_ENV)\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(\"sw registrada\")\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport PasswordReset from './components/PasswordReset';\nimport Login from './components/Login';\nimport Wall from './components/Wall';\nimport OrderList from './components/OrderList';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter basename = { process.env.PUBLIC_URL } >\n      <div>\n              <Route exact path = '/' component = { App } />\n              <Route path = '/login' component = { Login } />\n              <Route path = '/recover' component = { PasswordReset } />\n              <Route path = '/orders' component = { Wall } />\n              <Route path = '/report' component = {OrderList} />\n        </div>\n      </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}