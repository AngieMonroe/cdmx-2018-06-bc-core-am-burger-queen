{"version":3,"sources":["images/Logo.png","firebaseConf/FirebaseConf.js","App.js","components/PasswordReset.js","components/Login.js","components/NavbarApp.js","store.js","components/Orders.js","components/Footer.js","components/Wall.js","components/OrderList.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firestore","firebaseConf","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","enablePersistence","then","catch","err","code","FirebaseConf","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","authListener","_this2","auth","onAuthStateChanged","setState","history","push","replace","react_default","a","createElement","className","Component","withRouter","PasswordReset","handleChange","e","defineProperty","target","name","value","email","preventDefault","sendPasswordResetEmail","alert","error","console","log","mdbreact","md","src","Logo","alt","label","icon","group","type","validate","success","onChange","bind","color","size","onClick","resetPassword","Login","signIn","assertThisInitialized","password","_this$state","signInWithEmailAndPassword","result","NavbarApp","signOut","BrowserRouter","dark","expand","scrolling","order","height","right","logout","createStore","action","objectSpread","concat","product","filter","i","Orders","store","subscribe","getState","dispatch","length","collection","add","status","total","map","key","nombre","precio","removeFromOrder","forEach","sendKitchen","FooterApp","fluid","orderList","Wall","breakfast","dinner","extra","client","toUpperCase","menu","button","_this3","data","addToCart","handleChangeExtra","components_NavbarApp","id","handleChangeName","handleChangeBreakfast","handleChangeDinner","src_components_Orders","components_Footer","OrderList","orders","onSnapshot","querySnapshot","doc","_doc$data","dataOrder","window","confirm","update","infoOrder","element","checked","scope","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","basename","process","Route","exact","path","component","document","getElementById","URL","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1dce0b27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.3aa9aef1.png\";","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBkvp9ifqDeJNPNCH-0PK5QxZpNyZxxjrE\",\r\n    authDomain: \"burguer-queen-b6057.firebaseapp.com\",\r\n    databaseURL: \"https://burguer-queen-b6057.firebaseio.com\",\r\n    projectId: \"burguer-queen-b6057\",\r\n    storageBucket: \"burguer-queen-b6057.appspot.com\",\r\n    messagingSenderId: \"393144218466\"\r\n  };\r\n  const firebaseConf = firebase.initializeApp(config);\r\n  let firestore;\r\n\r\n  firebase.firestore().enablePersistence()\r\n  .then(function() {\r\n      // Initialize Cloud Firestore through firebase\r\n      firestore = firebase.firestore();\r\n  })\r\n  .catch(function(err) {\r\n      if (err.code === 'failed-precondition') {\r\n          // Multiple tabs open, persistence can only be enabled\r\n          // in one tab at a a time.\r\n          // ...\r\n      } else if (err.code === 'unimplemented') {\r\n          // The current browser does not support all of the\r\n          // features required to enable persistence\r\n          // ...\r\n      }\r\n  });\r\n\r\n  \r\n\r\n\r\n  export default firebaseConf;\r\n  export {firestore};","import React, { Component } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport firebaseConf from './firebaseConf/FirebaseConf';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: null\n    }\n  }\n\n  componentDidMount(){\n    this.authListener();\n  }\n\n  authListener() {\n    firebaseConf.auth().onAuthStateChanged((user)=>{\n      if(user){\n        this.setState({ user });\n        this.props.history.push('/orders')\n      } else{\n        this.setState({ user: null });\n        this.props.history.replace('/login')\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      \n      </div>\n    )}\n}\n\nexport default withRouter(App);\n","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Container, Row, Col, Input, Button } from 'mdbreact';\r\nimport * as firebase from 'firebase'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Componente para restaurar contraseña se utilizan las funciones de firebase para este fin\r\nclass PasswordReset extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: ''\r\n    }\r\n  }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState ({\r\n          [e.target.name]: e.target.value\r\n        })\r\n      }\r\n\r\n    resetPassword(e){\r\n      e.preventDefault();\r\n      const { email } = this.state;\r\n        firebase.auth().sendPasswordResetEmail(email).then(function() {\r\n          alert('Te enviamos un correo')\r\n          }).catch(function(error) {\r\n          console.log(error)\r\n          });\r\n          this.props.history.push('/login');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Container>\r\n        <Row className= \"row justify-content-md-center\">\r\n          <Col md=\"10\">\r\n          <img src={Logo} className=\"m-5 mx-auto d-block\" alt=\"logo\" />\r\n            <form>\r\n              <p className=\"h5 text-center mb-4\">Restaura tu contraseña</p>\r\n              <div className=\"grey-text\">\r\n                <Input label=\"Escribe tu email\" icon=\"envelope\" group type=\"email\" name=\"email\" validate error=\"wrong\" success=\"right\" onChange={this.handleChange.bind(this)}/>\r\n              </div>\r\n              <div className=\"text-center mb-3\">\r\n                <Button color=\"warning\" className=\"mb-3\" size=\"lg\" onClick={this.resetPassword.bind(this)} >Enviar correo</Button>\r\n              </div>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PasswordReset);","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Container, Row, Col, Input, Button, ModalFooter } from 'mdbreact';\r\nimport { withRouter } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\n//Componente Login. El usuario inicia sesión la autenticación se realiza mediante firebase\r\n\r\nclass Login extends Component  {\r\n  constructor(props){\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n  \r\n\r\n  signIn(e) {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then(result => this.props.history.push('/orders'))\r\n    .catch(function(error) {\r\n      console.log(error);\r\n      if(error.code === \"auth/invalid-email\"){\r\n        alert('Email no válido, revisa la información.')\r\n      } else if(error.code === \"auth/wrong-password\"){\r\n        alert('Password no válido, revisa la información.')\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChange(e){\r\n    // console.log(this.state)\r\n    this.setState ({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  // Con este metodo enviamos a la pagina para recuperar contraseña por medio de rutas\r\n  resetPassword(){\r\n    this.props.history.push('/recover')\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Container>\r\n        <Row className= \"row justify-content-md-center\">\r\n          <Col md=\"10\">\r\n          <img src={Logo} className=\"m-5 mx-auto d-block\" alt=\"logo\" />\r\n            <form>\r\n              <p className=\"h5 text-center mb-5\">Abrir Caja</p>\r\n              <div className=\"grey-text mb-4\">\r\n                <Input className=\"mb-5\" label=\"Escribe tu email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\" name=\"email\" onChange={this.handleChange}/>\r\n                <Input className=\"mb-5\" label=\"Escribe tu password\" icon=\"lock\" group type=\"password\" validate name=\"password\" onChange={this.handleChange}/>\r\n              </div>\r\n              <div className=\"text-center mb-3\">\r\n                <Button color=\"warning\" className=\"mb-5 rounded\" size=\"lg\" onClick={this.signIn.bind(this)} >Entrar</Button>\r\n              </div>\r\n            </form>\r\n            <ModalFooter className=\"mx-5 pt-3 mt-4\">\r\n              <Button color=\"lime\" size=\"lg\" className=\"mt-5 rounded\" onClick={this.resetPassword.bind(this)}>Restaurar Contraseña </Button>\r\n            </ModalFooter>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withRouter(Login);","import React, { Component } from 'react';\r\nimport Logo from '../images/Logo.png'\r\nimport { Navbar, NavbarBrand, NavbarNav,  NavItem, Button } from 'mdbreact';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Componente navbar\r\nclass NavbarApp extends Component {\r\n\r\n    order(){\r\n        this.props.history.push('/orders')\r\n    }\r\n\r\n    logout(){\r\n        firebase.auth().signOut()\r\n        .then(function() {\r\n            console.log('saliendo')\r\n        })\r\n        .catch(function(){\r\n            console.log('error al cerrar sesión')\r\n        })\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Navbar color=\"lime\" dark expand=\"md\" scrolling>\r\n                    <NavbarBrand onClick={this.order.bind(this)}>\r\n                    <img src={Logo} alt=\"logo\" height=\"80\"/>\r\n                    </NavbarBrand>\r\n                        <NavbarNav right>\r\n                          <NavItem>\r\n                            <Button color=\"red darken-4\" className=\"rounded\" onClick={this.logout.bind(this)}>Cerrar caja</Button>\r\n                          </NavItem>\r\n                        </NavbarNav>\r\n                </Navbar>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(NavbarApp);","import { createStore } from  'redux';\r\n\r\nconst reducer = (state, action) => {\r\n    if(action.type === \"ADD_TO_ORDER\"){\r\n        return {\r\n            ...state,\r\n            order: state.order.concat(action.product)\r\n            }\r\n    } else if(action.type === \"REMOVE_FROM_ORDER\"){\r\n        return {\r\n            ...state,\r\n            order: state.order.filter((product, i) => i !== action.i)\r\n        }\r\n    }\r\nreturn state;\r\n};\r\n\r\nexport default createStore(reducer, {order: []});","import React, { Component } from 'react';\r\nimport { Table, TableBody, Button, Fa  } from 'mdbreact';\r\nimport store from '../store';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { firestore } from '../firebaseConf/FirebaseConf';\r\nimport './Orders.css';\r\n\r\n\r\n\r\n// Este componente es el encargado de mostrar el listado de los productos que se han solicitado y\r\n// se realiza la suma, se pueden eliminar productos. Se utiliza redux para tener un estado global\r\n// que se utiliza en conjunto con el componente Wall.\r\nclass Orders extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            order: []\r\n        }\r\n        store.subscribe(() => {\r\n            this.setState({\r\n                order: store.getState().order\r\n            })\r\n            console.log(this.state.order)\r\n        });\r\n    }\r\n\r\n    removeFromOrder(product, i){\r\n        store.dispatch({\r\n            type: \"REMOVE_FROM_ORDER\",\r\n            product,\r\n            i})\r\n    }\r\n\r\n    sendKitchen(){\r\n        const {name} = this.props\r\n        if(!name){\r\n            alert('Ingresar nombre cliente')\r\n        } \r\n        if (this.state.order.length === 0) {\r\n            alert('Ingresa producto')\r\n        }\r\n        else {\r\n        firestore.collection(\"orders\").add({\r\n            order: this.state.order,\r\n            status: \"En cocina\",\r\n            name\r\n        })\r\n        .then(function() {\r\n            // console.log(\"Document successfully written!\");\r\n        })\r\n        this.props.history.push('/')\r\n    }\r\n    }\r\n   \r\n\r\n    render() {\r\n        let order;\r\n        let total = 0\r\n        order = this.state.order.map((product, i) => {\r\n            console.log(product)\r\n            return <tr key={i}>\r\n            <td className=\"text-center align-middle\">{product.nombre}</td>\r\n            <td className=\"text-center align-middle\">{product.precio}</td>\r\n            <td className=\"text-center align-middle\">\r\n            <Button size=\"sm\" color=\"red darken-4 rounded\" onClick={() =>this.removeFromOrder(product, i)}><Fa icon=\"trash\" size=\"1x\"/><br/></Button></td>\r\n            </tr>\r\n        })\r\n\r\n        this.state.order.forEach(product => {\r\n            // console.log(product.precio)\r\n            total += product.precio\r\n        })\r\n\r\n        \r\n    return (\r\n      <section className=\"container\">\r\n        <div className=\"row mt-5 \">\r\n        <div className=\"col-7 margin-bottom\">\r\n        <Table>\r\n        <TableBody>\r\n        {order}\r\n        </TableBody>\r\n        </Table>\r\n        </div>\r\n         <div className=\"col-5 text-center \">\r\n             <p className=\"display-4\">Total<br/>${total}</p>\r\n             <Button color=\"lime\" onClick={this.sendKitchen.bind(this)}><Fa icon=\"paper-plane\" size=\"1x md\"/><br/>Enviar a Cocina</Button>\r\n         </div>\r\n        </div>\r\n    </section>)\r\n  }\r\n}\r\n\r\nexport default withRouter(Orders);","import React, { Component} from \"react\";\r\nimport { Col, Container, Row, Footer, Button, Fa } from \"mdbreact\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Footer.css';\r\n\r\n// Componente footer\r\nclass FooterApp extends Component {\r\n    \r\n    orderList(){\r\n        this.props.history.push('/report')\r\n      }\r\n      \r\n    render() {\r\n    return (\r\n    <Footer color=\"warning-color\" className=\"font-small footer-bottom\" >\r\n    <Container fluid className=\"text-center text-md-right\">\r\n        <Row>\r\n        <Col>\r\n        <Button size=\"lg\" color=\"red\" onClick={this.orderList.bind(this)}> <Fa icon=\"list-alt\" size=\"1x\"/> <br/> Lista de Pedidos</Button>\r\n        </Col>\r\n        </Row>\r\n    </Container>\r\n    </Footer>\r\n    );\r\n}\r\n}\r\n\r\nexport default withRouter(FooterApp);","import React,  { Component }  from 'react';\r\nimport NavbarApp from './NavbarApp';\r\nimport { Button, Fa } from 'mdbreact';\r\nimport Orders from './Orders'\r\nimport { withRouter } from 'react-router-dom';\r\nimport data from '../data/dataBurger.json'\r\nimport store from '../store';\r\nimport firebase from 'firebase';\r\nimport FooterApp from './Footer';\r\n\r\n// En este componente realizamos el render de los productos de acuerdo a las opciones\r\n// desayuno y comida, cada boton a su vez tiene la función de actualizar el estado de redux\r\n// para tener un estado global que compartira con Orders.\r\nclass Wall extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            breakfast : false,\r\n            dinner : false,\r\n            extra : false,\r\n            client: null,\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if(!user){\r\n                this.props.history.push('/login')\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeName(e){\r\n        this.setState ({\r\n            [e.target.name]: e.target.value.toUpperCase()\r\n        })\r\n    }\r\n\r\n    handleChangeBreakfast(){\r\n        this.setState ({breakfast: true})\r\n    }\r\n\r\n    handleChangeDinner(){\r\n        this.setState ({breakfast: false, dinner: true})\r\n    }\r\n\r\n\r\n    handleChangeExtra(){\r\n        this.setState({dinner: false, extra: true})\r\n    }\r\n\r\n    // El render de la información se realiza por medio de map y a su vez se guarda esta función en una variable.\r\n    // Esto se realiza con base en la documentación de react.\r\n    render() {\r\n        let menu;\r\n        let button;\r\n        if(this.state.breakfast){\r\n        menu =  data.breakfast.map((product, i) => {\r\n        return (\r\n          <Button key={i} color=\"green\" className=\"mr-3 mb-3\" name={product.nombre} value={product.precio} onClick={()=> this.addToCart(product)}><Fa icon={product.icon} size=\"3x md\" className=\"m-1\"/><br/>{product.nombre}</Button>\r\n        )\r\n        })\r\n        } else if (this.state.dinner){\r\n            button = <Button className=\"rounded\" size=\"lg\" color=\"amber lighten-5\" onClick={this.handleChangeExtra.bind(this)}>Extra</Button>\r\n\r\n            menu = data.dinner.map((product, i) => {\r\n                return (\r\n                    <Button key={i} color=\"amber\" className=\"mr-2 mb-3\" name={product.nombre} value={product.precio} onClick={()=> this.addToCart(product)}><Fa icon={product.icon} size=\"3x md\" className=\"m-1\"/><br/>{product.nombre}</Button>\r\n                )\r\n            })\r\n        } else if (this.state.extra){\r\n            menu = data.extra.map((product, i) => {\r\n                return (\r\n                    <Button key={i} color=\"amber lighten-5\" className=\"mr-5 mb-3\" name={product.nombre} value={product.precio} onClick={()=> this.addToCart(product)}><Fa icon={product.icon} size=\"3x lg\" className=\"m-1\"/><br/>{product.nombre}</Button>\r\n                )\r\n            })\r\n        }\r\n\r\n        \r\n        return (\r\n            <div>\r\n            <NavbarApp />\r\n            <section className=\"container mt-4\">\r\n            <label id=\"exampleForm2\">Nombre cliente</label>\r\n            <input type=\"text\" id=\"exampleForm2\" className=\"form-control col-8 mb-3\" name=\"client\" onChange={this.handleChangeName.bind(this)}></input>\r\n            <Button className=\"mr-4 rounded\" size=\"lg\" color=\"lime darken-4\" onClick={this.handleChangeBreakfast.bind(this)}>Desayunos</Button>\r\n            <Button className=\"rounded\" size=\"lg\" color=\"orange darken-4\" onClick={this.handleChangeDinner.bind(this)}>Comida</Button>\r\n            {button}\r\n\r\n            <section className=\"mt-4\">\r\n            {menu}   \r\n            </section>\r\n            </section>\r\n            <div>\r\n                <Orders name ={this.state.client}/>\r\n            </div>\r\n            <FooterApp />\r\n            \r\n            </div>\r\n        )\r\n    }\r\n\r\n    addToCart(product){\r\n        store.dispatch({\r\n            type: \"ADD_TO_ORDER\",\r\n            product\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Wall);","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport { withRouter } from 'react-router-dom';\r\nimport NavbarApp from './NavbarApp';\r\n\r\nlet firestore = firebase.firestore();\r\n\r\n// Con la información de firebase se pinta un listado de los productos seleccionados. Falta trabajar persistencia\r\n// de la información con ayuda de firebase.\r\nclass OrderList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            orders: []\r\n        })\r\n    }\r\n\r\n    // Información de la base de datos\r\n    componentWillMount(){\r\n        firestore.collection('orders').onSnapshot((querySnapshot) => {\r\n            const orders = []\r\n            querySnapshot.forEach((doc) => {\r\n                const {status, order, name} = doc.data();\r\n                let dataOrder = {status, order, name, id: doc.id}\r\n                orders.push(dataOrder);\r\n            })\r\n        this.setState({orders})\r\n        })\r\n    }\r\n\r\n    //Actualización de estado del pedido\r\n    status(id){\r\n        const response = window.confirm('Estas seguro de cambiar el status')\r\n        if(response){\r\n        let ref = firestore.collection('orders').doc(id);\r\n        return ref.update({\r\n            status: \"Entregada\"\r\n        });\r\n    }\r\n}\r\n\r\n    render () {\r\n        let status;\r\n        let infoOrder = this.state.orders.map((element, i) => {\r\n            if(element.status === \"En cocina\"){\r\n                status = <label key={i} className=\"bs-switch\">\r\n                <input  size=\"sm\" type=\"checkbox\" onClick={()=>(this.status(element.id))}/>\r\n                <span className=\"slider round\"></span>\r\n                </label>\r\n            } else {\r\n                status = <label key={i} className=\"bs-switch\">\r\n                        <input  size=\"sm\" type=\"checkbox\" checked/>\r\n                        <span className=\"slider round\"></span>\r\n                        </label>\r\n            }\r\n            let product = element.order.map((product, i) => {\r\n                return  <p key={i}>{product.nombre}</p>\r\n            })\r\n            return (\r\n            \r\n                <tr key={i}>\r\n                    <td className=\"align-middle\">{element.name}</td>\r\n                    <td>{product}</td>\r\n                    <td className=\"align-middle\">En cocina {status}\r\n                        Entregado</td>\r\n                </tr>\r\n            ) \r\n        })\r\n        return (\r\n            <section>\r\n                <NavbarApp />\r\n            <article className=\"container mt-5\">\r\n                <table className=\"table container text-center\">\r\n                <thead className=\"grey lighten-2 \">\r\n                    <tr>\r\n                    <th scope=\"col\"><strong>Nombre</strong></th>\r\n                    <th scope=\"col\"><strong>Pedido</strong></th>\r\n                    <th scope=\"col\"><strong>Status</strong></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {infoOrder}\r\n                </tbody>\r\n                </table>\r\n                </article>\r\n                </section>\r\n        )\r\n \r\n}\r\n}\r\n\r\nexport default withRouter(OrderList);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    console.log(\"no registrarse sw Current env:\", process.env.NODE_ENV)\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(\"sw registrada\")\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport PasswordReset from './components/PasswordReset';\nimport Login from './components/Login';\nimport Wall from './components/Wall';\nimport OrderList from './components/OrderList';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter basename = { process.env.PUBLIC_URL } >\n      <div>\n              <Route exact path = '/' component = { App } />\n              <Route path = '/login' component = { Login } />\n              <Route path = '/recover' component = { PasswordReset } />\n              <Route path = '/orders' component = { Wall } />\n              <Route path = '/report' component = {OrderList} />\n        </div>\n      </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}